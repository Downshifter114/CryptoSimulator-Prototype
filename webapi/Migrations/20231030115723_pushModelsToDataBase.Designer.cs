// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi.Data;

#nullable disable

namespace webapi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231030115723_pushModelsToDataBase")]
    partial class pushModelsToDataBase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("webapi.Models.BuyTranscation", b =>
                {
                    b.Property<int>("TranscationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TranscationId"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("CoinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoinImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePerCoin")
                        .HasColumnType("float");

                    b.Property<DateTime>("TrascationTime")
                        .HasColumnType("datetime2");

                    b.HasKey("TranscationId");

                    b.ToTable("buyTranscations");
                });

            modelBuilder.Entity("webapi.Models.SellTranscation", b =>
                {
                    b.Property<int>("TranscationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TranscationId"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("CoinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoinImageURl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePerCoin")
                        .HasColumnType("float");

                    b.Property<DateTime>("TranscationTime")
                        .HasColumnType("datetime2");

                    b.HasKey("TranscationId");

                    b.ToTable("sellTranscations");
                });

            modelBuilder.Entity("webapi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("webapi.Models.UserAsset", b =>
                {
                    b.Property<int>("UserAssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserAssetId"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("CoinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoinImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserAssetId");

                    b.ToTable("userAssets");
                });
#pragma warning restore 612, 618
        }
    }
}
